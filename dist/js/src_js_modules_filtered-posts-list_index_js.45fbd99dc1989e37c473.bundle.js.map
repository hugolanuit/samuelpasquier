{"version":3,"file":"js/src_js_modules_filtered-posts-list_index_js.45fbd99dc1989e37c473.bundle.js","mappings":"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","sources":["webpack://samuelpasquier/./src/js/modules/filtered-posts-list/FilteredPostsList.js","webpack://samuelpasquier/./src/js/modules/filtered-posts-list/index.js","webpack://samuelpasquier/./src/js/modules/filtered-posts-list/factory.js","webpack://samuelpasquier/./src/js/modules/module/Module.js"],"sourcesContent":["/**\n * Filtered Post List : enable post-type archive filtering using SELECT element containing a post-type taxonomy\n *\n * How to use in your template :\n *\n * 1. attach JS module to the container containing : SELECT element, all posts, pagination\n *\n * <section data-module=\"filtered-posts-list\" data-filtered-posts-list></section>\n *\n * 2. attach data-selector to SELECT element\n *\n * <select class=\"my-ctp-archive__filter\" data-filtered-posts-list-filters >\n *   <option value=\"{{ my-ctp_archive_link }}\">{{ __('Filter by', 'mill3wp') }}</option>\n *   <option value=\"{{ term.link }}\">{{ term.name }}</option>\n *\n * 3. attach data-selector to posts container\n *\n * <ol data-filtered-posts-list-results >\n * {% for post in posts %}\n * ...\n * </ol>\n *\n * 4. attach data-selector to pagination element\n *\n * <div data-filtered-posts-list-pagination>\n *   {% include 'partial/pagination.twig' }\n * </div>\n *\n*/\n\nimport anime from \"animejs\";\nimport barba from \"@barba/core\";\n\nimport { $ } from \"@utils/dom\";\nimport { on, off } from \"@utils/listener\";\n\nconst LOCKED_CLASSNAME = \"--js-filtered-posts-list-locked\";\nconst FILTERS_SELECTOR = \"[data-filtered-posts-list-filters]\";\nconst PAGINATION_SELECTOR = \"[data-filtered-posts-list-pagination]\";\nconst RESULTS_SELECTOR = \"[data-filtered-posts-list-results]\";\n\nclass FilteredPostsList {\n  constructor(el, emitter) {\n    this.el = el;\n    this.emitter = emitter;\n\n    this.filters = $(FILTERS_SELECTOR, this.el);\n    this.pagination = $(PAGINATION_SELECTOR, this.el);\n    this.results = $(RESULTS_SELECTOR, this.el);\n\n    this._parser = null;\n    this._newPageTitle = null;\n    this._newPaginationHTML = null;\n    this._newResultsHTML = null;\n\n    this._onTypeChange = this._onTypeChange.bind(this);\n    this._onAjaxCallback = this._onAjaxCallback.bind(this);\n    this._onAjaxResponse = this._onAjaxResponse.bind(this);\n    this._onAjaxError = this._onAjaxError.bind(this);\n    this._onElementsHidden = this._onElementsHidden.bind(this);\n    this._onTimelineComplete = this._onTimelineComplete.bind(this);\n\n    this.init();\n  }\n\n  init() {\n    // make sure filters has data-barba-history=\"replace\"\n    if( this.filters ) this.filters.setAttribute('data-barba-history', 'replace');\n\n    this._bindEvents();\n  }\n  destroy() {\n    this._unbindEvents();\n\n    this.el = null;\n    this.emitter = null;\n    this.filters = null;\n    this.pagination = null;\n    this.results = null;\n\n    this._parser = null;\n    this._newPageTitle = null;\n    this._newPaginationHTML = null;\n    this._newResultsHTML = null;\n\n    this._onTypeChange = null;\n    this._onAjaxCallback = null;\n    this._onAjaxResponse = null;\n    this._onAjaxError = null;\n    this._onElementsHidden = null;\n    this._onTimelineComplete = null;\n  }\n\n  _bindEvents() {\n    if(this.filters) on(this.filters, 'change', this._onTypeChange);\n  }\n  _unbindEvents() {\n    if(this.filters) off(this.filters, 'change', this._onTypeChange);\n  }\n\n  _onTypeChange() {\n    const href = this.filters.value;\n\n    // remove previous history state\n    barba.history.remove();\n\n    // add new history state\n    // window.history will be \"replaced\" instead of \"pushed\" because of\n    // [data-barba-history=\"replace\"] attribute on this.filters element\n    barba.history.change(href, this.filters);\n\n    // block UI\n    if( this.el ) this.el.classList.add(LOCKED_CLASSNAME);\n\n    // fetch HTML\n    fetch(href)\n      .then(this._onAjaxCallback)\n      .then(this._onAjaxResponse)\n      .catch(this._onAjaxError);\n  }\n  _onAjaxCallback(response) {\n    // stop here if module has been destroyed during Fetch request\n    if( !this.el ) return;\n\n    // return fetch response to promises\n    if( response.ok ) return response.text();\n    else this._onTimelineComplete();\n  }\n  _onAjaxResponse(html) {\n    // stop here if module has been destroyed during Fetch request\n    if( !this.el ) return;\n\n    // create DOMParser only once\n    if( !this._parser ) this._parser = new DOMParser();\n\n    const doc = this._parser.parseFromString(html, \"text/html\");\n    const title = $('html title', doc);\n    const results = $(RESULTS_SELECTOR, doc);\n    const pagination = $(PAGINATION_SELECTOR, doc);\n\n    // if we can't find results, stop here\n    if( !results ) {\n      this._onTimelineComplete();\n      return;\n    }\n\n    // save new content\n    this._newPageTitle = title.innerText;\n    this._newResultsHTML = results.innerHTML;\n    this._newPaginationHTML = pagination ? pagination.innerHTML : '';\n\n    // fade out results & pagination\n    const elements = [];\n\n    if( this.results ) elements.push(this.results);\n    if( this.pagination ) elements.push(this.pagination);\n\n    if( elements.length > 0 ) {\n      anime({\n        targets: elements,\n        opacity: {\n          value: 0,\n          duration: 250,\n          delay: 200,\n          easing: \"linear\"\n        },\n        translateY: {\n          value: 60,\n          duration: 450,\n          easing: \"easeInQuad\"\n        },\n        complete: this._onElementsHidden,\n      });\n    }\n    else this._onTimelineComplete();\n  }\n  _onAjaxError(error) {\n    console.log('FlteredPostsList AJAX error:', error);\n\n    this._onTimelineComplete();\n  }\n  _onElementsHidden() {\n    // stop here if module has been destroyed during Fetch request\n    if( !this.el ) return;\n\n    // update page title\n    document.title = this._newPageTitle;\n\n    // replace results\n    if( this.results ) this.results.innerHTML = this._newResultsHTML;\n\n    // replace pagination\n    if( this.pagination ) this.pagination.innerHTML = this._newPaginationHTML;\n\n    // clear variables\n    this._newPageTitle = null;\n    this._newResultsHTML = null;\n    this._newPaginationHTML = null;\n\n    // refresh locomotive-scroll\n    this.emitter.emit('SiteScroll.update');\n\n    // fade in results & pagination\n    const elements = [];\n\n    if( this.results ) elements.push(this.results);\n    if( this.pagination ) elements.push(this.pagination);\n\n    // fade in list each time\n    if( elements.length > 0 ) {\n      anime({\n        targets: elements,\n        opacity: {\n          value: [0, 1],\n          duration: 450,\n          easing: \"linear\"\n        },\n        translateY: {\n          value: [60, 0],\n          duration: 850,\n          easing: 'easeOutCubic'\n        }\n      });\n    }\n\n    this._onTimelineComplete();\n  }\n  _onTimelineComplete() {\n    // unblock UI\n    if( this.el ) this.el.classList.remove(LOCKED_CLASSNAME);\n  }\n}\n\nexport default FilteredPostsList;\n","import Factory from \"./factory\";\n\nexport const instance = new Factory();\n\nexport default { instance };\n","import { $$ } from \"@utils/dom\";\n\nimport Module from \"../module/Module\";\nimport FilteredPostsList from \"./FilteredPostsList\";\n\nexport const SELECTOR = `[data-filtered-posts-list]`;\n\nclass Factory extends Module {\n  constructor(init = false) {\n    super();\n\n    this.initialized = false;\n    this.items = null;\n\n    init ? this.init() : null;\n  }\n\n  get name() {\n    return \"FilteredPostsList\";\n  }\n\n  init() {\n    // set initialized\n    this.initialized = true;\n    this.items = [...$$(SELECTOR)].map(el => new FilteredPostsList(el, this.emitter));\n  }\n\n  destroy() {\n    if (this.items) this.items.forEach(el => el.destroy());\n\n    this.initialized = false;\n    this.items = null;\n  }\n}\n\nexport default Factory;\n","class Module {\n  init() {}\n\n  // called during Barba's afterEnter hook.\n  start() {}\n\n  // called during Barba's beforeLeave hook.\n  stop() {}\n\n  // called during Barba's afterLeave hook.\n  destroy() {}\n\n  // getter - setter\n  get name() {\n    return null;\n  }\n}\n\nexport default Module;\n"],"names":["LOCKED_CLASSNAME","PAGINATION_SELECTOR","RESULTS_SELECTOR","FilteredPostsList","el","emitter","this","filters","$","pagination","results","_parser","_newPageTitle","_newPaginationHTML","_newResultsHTML","_onTypeChange","bind","_onAjaxCallback","_onAjaxResponse","_onAjaxError","_onElementsHidden","_onTimelineComplete","init","setAttribute","_bindEvents","destroy","_unbindEvents","on","off","href","value","barba","classList","add","fetch","then","catch","response","ok","text","html","DOMParser","doc","parseFromString","title","innerText","innerHTML","elements","push","length","anime","targets","opacity","duration","delay","easing","translateY","complete","error","console","log","document","emit","remove","instance","Factory","initialized","items","name","$$","map","forEach","Module","start","stop"],"sourceRoot":""}