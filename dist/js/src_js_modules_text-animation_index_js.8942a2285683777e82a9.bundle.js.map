{"version":3,"file":"js/src_js_modules_text-animation_index_js.8942a2285683777e82a9.bundle.js","mappings":"0WAkBA,QAlBA,W,SAAMA,K,+HACJC,IAAAA,O,MAAAA,c,CAGAC,IAAAA,Q,MAAAA,c,CAGAC,IAAAA,O,MAAAA,c,CAGAC,IAAAA,U,MAAAA,c,CAGIC,IAAAA,O,IAAJ,WACE,OAAO,U,6BAdX,I,gpECgCA,IACMC,EAA2B,QAoCpBC,EAAW,IAlCxB,SAAQ,I,kQAAFC,I,MACQP,EAAO,UAAH,8C,kCAGTQ,aAAc,E,EACdC,MAAQ,KAEbT,GAAO,EAAKA,O,kBAGVI,IAAAA,O,IAAJ,WACE,MAAO,kB,CAGTJ,IAAAA,O,MAAAA,WACEU,KAAKF,aAAc,EACnBE,KAAKD,MAAQ,GAAIE,EAAAA,EAAAA,IAnBJ,0BAmBkBC,KAAIC,SAAAA,GAC5BA,EAAGC,aAAa,gBAAgBD,EAAGE,aAAa,cAAe,IAC/DF,EAAGC,aAAa,mBAAmBD,EAAGE,aAAa,iBAAkBV,GAE1E,IAAMW,EAASH,EAAGI,QAAQC,WAAab,EAEvC,OAAO,IAAIc,IAAJ,CAAc,CACnBC,OAAQP,EACRQ,GAAIL,S,CAIVb,IAAAA,U,MAAAA,WACEO,KAAKF,aAAc,EACnBE,KAAKD,MAAQ,U,6BA9BjB,CAA4BV,EAAAA,IAoC5B,SAAiBO,SAAAA","sources":["webpack://samuelpasquier/./src/js/modules/module/Module.js","webpack://samuelpasquier/./src/js/modules/text-animation/index.js"],"sourcesContent":["class Module {\n  init() {}\n\n  // called during Barba's afterEnter hook.\n  start() {}\n\n  // called during Barba's beforeLeave hook.\n  stop() {}\n\n  // called during Barba's afterLeave hook.\n  destroy() {}\n\n  // getter - setter\n  get name() {\n    return null;\n  }\n}\n\nexport default Module;\n","/**\n * TEXT ANIMATION\n *\n * How to use:\n * Add data-module=\"text-animation\" to your HTML element\n * Add data-text-animation=\"animation-name\"\n * Add data-splitting to specify plugin to split text when calling Splitting(). (optional)\n *\n * Optionally add data-scroll and data-splitting=\"by\" to your HTML element.\n * If you omit data-scroll, it will be inserted automatically.\n * If you omit data-splitting, it will be inserted automatically with \"chars\" value.\n * If you provide them, it will be faster for mobile device.\n *\n * Example:\n * <h2\n *  class=\"position-relative d-block w-100 vh-50\"\n *  data-scroll\n *  data-module=\"text-animation\"\n *  data-splitting=\"words\"\n *  data-text-animation=\"my-awesome-animation\"\n * >\n *  Hello World\n * </h2>\n *\n * Animation is powered by css and triggered by .is-inview class on your HTML element.\n */\n\nimport Splitting from \"splitting\";\n\nimport { $$ } from \"@utils/dom\";\nimport Module from \"../module/Module\";\n\nconst SELECTOR = \"[data-text-animation]\";\nconst DEFAULT_SPLITTING_PLUGIN = \"chars\";\n\nclass TextAnimation extends Module {\n  constructor(init = false) {\n    super();\n\n    this.initialized = false;\n    this.items = null;\n\n    init ? this.init() : null;\n  }\n\n  get name() {\n    return \"TextAnimation\";\n  }\n\n  init() {\n    this.initialized = true;\n    this.items = [...$$(SELECTOR)].map(el => {\n      if (!el.hasAttribute(\"data-scroll\")) el.setAttribute(\"data-scroll\", \"\");\n      if (!el.hasAttribute(\"data-splitting\")) el.setAttribute(\"data-splitting\", DEFAULT_SPLITTING_PLUGIN);\n\n      const plugin = el.dataset.splitting || DEFAULT_SPLITTING_PLUGIN;\n\n      return new Splitting({\n        target: el,\n        by: plugin\n      });\n    });\n  }\n  destroy() {\n    this.initialized = false;\n    this.items = null;\n  }\n}\n\nexport const instance = new TextAnimation();\n\nexport default { instance };\n"],"names":["Module","init","start","stop","destroy","name","DEFAULT_SPLITTING_PLUGIN","instance","TextAnimation","initialized","items","this","$$","map","el","hasAttribute","setAttribute","plugin","dataset","splitting","Splitting","target","by"],"sourceRoot":""}