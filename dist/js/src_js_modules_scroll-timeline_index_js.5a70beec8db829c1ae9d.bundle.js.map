{"version":3,"file":"js/src_js_modules_scroll-timeline_index_js.5a70beec8db829c1ae9d.bundle.js","mappings":"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","sources":["webpack://samuelpasquier/./src/js/modules/module/Module.js","webpack://samuelpasquier/./src/js/modules/scroll-timeline/index.js"],"sourcesContent":["class Module {\n  init() {}\n\n  // called during Barba's afterEnter hook.\n  start() {}\n\n  // called during Barba's beforeLeave hook.\n  stop() {}\n\n  // called during Barba's afterLeave hook.\n  destroy() {}\n\n  // getter - setter\n  get name() {\n    return null;\n  }\n}\n\nexport default Module;\n","/**\n * SCROLL TIMELINE\n *\n * How to use:\n * Add data-module=\"scroll-timeline\" to your HTML element\n * Add data-timeline=\"your-animejs-animation-object\" (must be JSON encode & html escaped)\n *\n * Optionally add data-scroll & data-scroll-call=\"timeline\" to your HTML element.\n * If you omit data-scroll or data-scroll-call, they will be inserted automatically.\n * If you provide them, it will be faster for mobile device.\n *\n * Example:\n * <div\n *  class=\"position-relative d-block w-100 vh-50\"\n *  data-scroll\n *  data-scroll-call=\"timeline\"\n *  data-module=\"scroll-timeline\"\n *  data-timeline=\"{{ {translateY: -100, scale: [1, 1.5], opacity: [1, 0.5]}|json_encode|escape('html_attr') }}\"\n * >\n *  <img src=\"image-path.jpg\" class=\"image-as-background\" />\n * </div>\n *\n * The whole data-timeline JSON object is passed to your AnimeJS animation.\n * See https://animejs.com/documentation/ for more details on passing data to AnimeJS.\n */\n\nimport anime from \"animejs\";\n\nimport { $$ } from \"@utils/dom\";\nimport Viewport from \"@utils/viewport\";\n\nimport Module from \"../module/Module\";\n\nconst SELECTOR = \"[data-timeline]\";\nconst TIMELINE_DEFAULTS = {\n  easing: \"linear\",\n  autoplay: false,\n  duration: 1000\n};\n\nclass ScrollTimeline extends Module {\n  constructor(init = false) {\n    super();\n\n    this.initialized = false;\n    this.items = null;\n\n    this._onCall = this._onCall.bind(this);\n    this._onScroll = this._onScroll.bind(this);\n\n    init ? this.init() : null;\n  }\n\n  get name() {\n    return \"ScrollTimeline\";\n  }\n\n  init() {\n    this.initialized = true;\n    this.items = [];\n\n    [...$$(SELECTOR)].forEach((el, index) => {\n      if (el.hasAttribute(\"data-scroll-call\") && el.dataset.scrollCall !== \"timeline\") {\n        console.warn(\n          `ScrollTimeline will be disabled on ${el} because it already has a data-scroll-call attribute.`,\n          el\n        );\n        return;\n      }\n\n      if (!el.hasAttribute(\"data-scroll\")) el.setAttribute(\"data-scroll\", \"\");\n      if (!el.hasAttribute(\"data-scroll-scroll\") || el.dataset.scrollCall !== \"timeline\")\n        el.setAttribute(\"data-scroll-call\", \"timeline\");\n\n      el.dataset.timelineID = index;\n    });\n\n    this._bindEvents();\n  }\n  destroy() {\n    this._unbindEvents();\n\n    if (this.items) this.items.forEach(tl => anime.remove(tl.el));\n\n    this.initialized = false;\n    this.items = null;\n  }\n\n  _bindEvents() {\n    this.emitter.on(\"SiteScroll.timeline\", this._onCall);\n    this.emitter.on(\"SiteScroll.scroll\", this._onScroll);\n  }\n  _unbindEvents() {\n    this.emitter.off(\"SiteScroll.timeline\", this._onCall);\n    this.emitter.off(\"SiteScroll.scroll\", this._onScroll);\n  }\n\n  _timelineExists(id) {\n    return this._getTimeline(id) !== undefined;\n  }\n  _getTimeline(id) {\n    return this.items.find(tl => tl.id === id);\n  }\n\n  _onCall(direction, obj) {\n    if (direction !== \"enter\") return;\n\n    const { el } = obj;\n    const id = el.dataset.timelineID || 0;\n\n    // if this object timeline already exists,\n    // update object top/bottom in timeline and stop here\n    if (this._timelineExists(id)) {\n      const tl = this._getTimeline(id);\n      tl.top = obj.top;\n      tl.bottom = obj.bottom;\n\n      return;\n    }\n\n    const timelineArgs = JSON.parse(el.dataset.timeline);\n\n    // create timeline and store it\n    this.items.push({\n      id: id,\n      top: obj.top,\n      bottom: obj.bottom,\n      el: el,\n      timeline: anime({\n        targets: el,\n        ...TIMELINE_DEFAULTS,\n        ...timelineArgs\n      })\n    });\n  }\n  _onScroll(y) {\n    const vh = Viewport.height;\n\n    this.items.forEach(tl => {\n      const { timeline, top, bottom } = tl;\n\n      const limit = Math.min(bottom, vh + bottom - top);\n      const distance = Math.min(limit, Math.max(0, bottom - y));\n      const progress = 1 - distance / limit;\n\n      timeline.seek(timeline.duration * progress);\n    });\n  }\n}\n\nexport const instance = new ScrollTimeline();\n\nexport default { instance };\n"],"names":["Module","init","start","stop","destroy","name","TIMELINE_DEFAULTS","easing","autoplay","duration","instance","ScrollTimeline","initialized","items","_onCall","bind","_onScroll","this","$$","forEach","el","index","hasAttribute","dataset","scrollCall","console","warn","setAttribute","timelineID","_bindEvents","_unbindEvents","tl","anime","emitter","on","off","_timelineExists","id","undefined","_getTimeline","find","direction","obj","top","bottom","timelineArgs","JSON","parse","timeline","push","targets","y","vh","Viewport","limit","Math","min","progress","max","seek"],"sourceRoot":""}