{"version":3,"file":"js/src_js_modules_google-map_index_js.2a48ce03f0074e418021.bundle.js","mappings":"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","sources":["webpack://samuelpasquier/./node_modules/load-google-maps-api/index.js","webpack://samuelpasquier/./src/js/modules/google-map/GoogleMap.js","webpack://samuelpasquier/./src/js/modules/google-map/index.js","webpack://samuelpasquier/./src/js/modules/google-map/factory.js","webpack://samuelpasquier/./src/js/modules/module/Module.js"],"sourcesContent":["const API_URL = 'https://maps.googleapis.com/maps/api/js'\nconst CALLBACK_NAME = '__googleMapsApiOnLoadCallback'\n\nconst optionsKeys = ['channel', 'client', 'key', 'language', 'region', 'v']\n\nlet promise = null\n\nmodule.exports = function (options = {}) {\n  promise =\n    promise ||\n    new Promise(function (resolve, reject) {\n      // Reject the promise after a timeout\n      const timeoutId = setTimeout(function () {\n        window[CALLBACK_NAME] = function () {} // Set the on load callback to a no-op\n        reject(new Error('Could not load the Google Maps API'))\n      }, options.timeout || 10000)\n\n      // Hook up the on load callback\n      window[CALLBACK_NAME] = function () {\n        if (timeoutId !== null) {\n          clearTimeout(timeoutId)\n        }\n        resolve(window.google.maps)\n        delete window[CALLBACK_NAME]\n      }\n\n      // Prepare the `script` tag to be inserted into the page\n      const scriptElement = document.createElement('script')\n      const params = [`callback=${CALLBACK_NAME}`]\n      optionsKeys.forEach(function (key) {\n        if (options[key]) {\n          params.push(`${key}=${options[key]}`)\n        }\n      })\n      if (options.libraries && options.libraries.length) {\n        params.push(`libraries=${options.libraries.join(',')}`)\n      }\n      scriptElement.src = `${options.apiUrl || API_URL}?${params.join('&')}`\n\n      // Insert the `script` tag\n      document.body.appendChild(scriptElement)\n    })\n  return promise\n}\n","import loadGoogleMapsApi from \"load-google-maps-api\";\n\nconst API_KEY = \"XXXXXX\";\nconst DEFAULT_OPTIONS = {\n  zoom: 16,\n  markers: null\n};\n\nlet GMAP = null;\n\nclass GoogleMap {\n  constructor(el) {\n    this.el = el;\n    this.options = {\n      ...DEFAULT_OPTIONS,\n      ...(JSON.parse(this.el.dataset.googleMap) || {})\n    };\n\n    this._initialized = true;\n\n    loadGoogleMapsApi({\n      key: API_KEY,\n      language: \"fr-CA\",\n      region: \"CA\"\n    }).then(this._onGoogleMapsApiLoaded.bind(this));\n  }\n\n  destroy() {\n    this.el = null;\n    this.options = null;\n\n    this._initialized = null;\n  }\n\n  addMarker(lat, lng) {\n    const { map } = this;\n    if (!map) return;\n\n    const position = { lat: parseFloat(lat), lng: parseFloat(lng) };\n\n    // Create marker instance.\n    const marker = new GMAP.Marker({ position, map });\n\n    // Append to reference for later use.\n    map.markers.push(marker);\n  }\n  center() {\n    const { map } = this;\n    if (!map) return;\n\n    // Create map boundaries from all map markers.\n    const bounds = new GMAP.LatLngBounds();\n\n    map.markers.forEach(marker => {\n      bounds.extend({\n        lat: marker.position.lat(),\n        lng: marker.position.lng()\n      });\n    });\n\n    // if there is only one marker on map, center map to this single marker\n    if (map.markers.length == 1) map.setCenter(bounds.getCenter());\n    else map.fitBounds(bounds);\n  }\n\n  _onGoogleMapsApiLoaded(googleMaps) {\n    // save library ref\n    GMAP = googleMaps;\n\n    // if module was destroyed before promise return, skip here\n    if (!this._initialized) return;\n\n    //const options = {\n    //  mapTypeId: GMAP.MapTypeId.ROADMAP,\n    //};\n\n    // create map\n    this.map = new GMAP.Map(this.el, this.options);\n\n    // add markers\n    this.options?.markers.forEach(({ lat, lng }) => this.addMarker(lat, lng));\n\n    // center map around markers\n    this.center();\n  }\n}\n\nexport default GoogleMap;\n","import Factory from \"./factory\";\n\nexport const instance = new Factory();\n\nexport default { instance };\n","import { $$ } from \"@utils/dom\";\n\nimport Module from \"../module/Module\";\nimport GoogleMap from \"./GoogleMap\";\n\nexport const SELECTOR = `[data-google-map]`;\n\nclass Factory extends Module {\n  constructor(init = false) {\n    super();\n\n    this.initialized = false;\n    this.items = null;\n\n    init ? this.init() : null;\n  }\n\n  get name() {\n    return \"GoogleMap\";\n  }\n\n  init() {\n    // set initialized\n    this.initialized = true;\n    this.items = [...$$(SELECTOR)].map(el => new GoogleMap(el));\n  }\n\n  destroy() {\n    if (this.items) this.items.forEach(el => el.destroy());\n\n    this.initialized = false;\n    this.items = null;\n  }\n}\n\nexport default Factory;\n","class Module {\n  init() {}\n\n  // called during Barba's afterEnter hook.\n  start() {}\n\n  // called during Barba's beforeLeave hook.\n  stop() {}\n\n  // called during Barba's afterLeave hook.\n  destroy() {}\n\n  // getter - setter\n  get name() {\n    return null;\n  }\n}\n\nexport default Module;\n"],"names":["CALLBACK_NAME","optionsKeys","promise","module","exports","options","Promise","resolve","reject","timeoutId","setTimeout","window","Error","timeout","clearTimeout","google","maps","scriptElement","document","createElement","params","forEach","key","push","libraries","length","join","src","apiUrl","body","appendChild","DEFAULT_OPTIONS","zoom","markers","GMAP","GoogleMap","el","this","JSON","parse","dataset","googleMap","_initialized","loadGoogleMapsApi","language","region","then","_onGoogleMapsApiLoaded","bind","destroy","addMarker","lat","lng","map","position","parseFloat","marker","Marker","center","bounds","LatLngBounds","extend","setCenter","getCenter","fitBounds","googleMaps","Map","instance","Factory","init","initialized","items","name","$$","Module","start","stop"],"sourceRoot":""}